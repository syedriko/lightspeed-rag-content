# Getting started with functions


Function lifecycle management includes creating and deploying a function, after which it can be invoked. You can do all of these operations on OpenShift Serverless using the kn func tool.

# Prerequisites

To enable the use of OpenShift Serverless Functions on your cluster, you must complete the following steps:

* The OpenShift Serverless Operator and Knative Serving are installed on your cluster.

[NOTE]
----
Functions are deployed as a Knative service. If you want to use event-driven architecture with your functions, you must also install Knative Eventing.
----
* You have the oc CLI installed.
* You have the Knative (kn) CLI installed. Installing the Knative CLI enables the use of kn func commands which you can use to create and manage functions.
* You have installed Docker Container Engine or Podman version 3.4.7 or higher.
* You have access to an available image registry, such as the OpenShift Container Registry.
* If you are using Quay.io as the image registry, you must ensure that either the repository is not private, or that you have followed the OpenShift Container Platform documentation on Allowing pods to reference images from other secured registries.
* If you are using the OpenShift Container Registry, a cluster administrator must expose the registry.

# Creating, deploying, and invoking a function

On OpenShift Serverless, you can use the kn func to create, deploy, and invoke a function.

1. Create a function project:

```terminal
$ kn func create -l <runtime> -t <template> <path>
```

Example command

```terminal
$ kn func create -l typescript -t cloudevents examplefunc
```

Example output

```terminal
Created typescript function in /home/user/demo/examplefunc
```

2. Navigate to the function project directory:
Example command

```terminal
$ cd examplefunc
```

3. Build and run the function locally:
Example command

```terminal
$ kn func run
```

4. Deploy the function to your cluster:

```terminal
$ kn func deploy
```

Example output

```terminal
Function deployed at: http://func.example.com
```

5. Invoke the function:

```terminal
$ kn func invoke
```


This invokes either a locally or remotely running function. If both are running, the local one is invoked.

# Additional resources for OpenShift Container Platform

* Exposing a default registry manually
* Marketplace page for the Intellij Knative plugin
* Marketplace page for the Visual Studio Code Knative plugin
* Creating applications using the Developer perspective

# Next steps

* See Using functions with Knative Eventing