# Persistent Volume Claims for Serving

Some serverless applications require permanent data storage. By configuring different volume types, you can provide data storage for Knative services. Serving supports mounting of the volume types such as secret, configMap, projected, and emptyDir.
You can configure persistent volume claims (PVCs) for your Knative services. The Persistent volume types are implemented as plugins. To determine if there are any persistent volume types available, you can check the available or installed storage classes in your cluster. Persistent volumes are supported, but require a feature flag to be enabled.

[WARNING]
----
The mounting of large volumes can lead to a considerable delay in the start time of the application.
----

# Enabling PVC support

1. To enable Knative Serving to use PVCs and write to them, modify the KnativeServing custom resource (CR) to include the following YAML:
Enabling PVCs with write access

```yaml
...
spec:
  config:
    features:
      "kubernetes.podspec-persistent-volume-claim": enabled
      "kubernetes.podspec-persistent-volume-write": enabled
...
```

* The kubernetes.podspec-persistent-volume-claim extension controls whether persistent volumes (PVs) can be used with Knative Serving.
* The kubernetes.podspec-persistent-volume-write extension controls whether PVs are available to Knative Serving with the write access.
2. To claim a PV, modify your service to include the PV configuration. For example, you might have a persistent volume claim with the following configuration:

[NOTE]
----
Use the storage class that supports the access mode you are requesting. For example, you can use the ocs-storagecluster-cephfs storage class for the ReadWriteMany access mode.
The ocs-storagecluster-cephfs storage class is supported and comes from Red Hat OpenShift Data Foundation.
----
PersistentVolumeClaim configuration

```yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: example-pv-claim
  namespace: my-ns
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ocs-storagecluster-cephfs
  resources:
    requests:
      storage: 1Gi
```


In this case, to claim a PV with write access, modify your service as follows:
Knative service PVC configuration

```yaml
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  namespace: my-ns
...
spec:
 template:
   spec:
     containers:
         ...
         volumeMounts: 1
           - mountPath: /data
             name: mydata
             readOnly: false
     volumes:
       - name: mydata
         persistentVolumeClaim: 2
           claimName: example-pv-claim
           readOnly: false 3
```

Volume mount specification.
Persistent volume claim specification.
Flag that enables read-only access.

[NOTE]
----
To successfully use persistent storage in Knative services, you need additional configuration, such as the user permissions for the Knative container user.
----

# Additional resources for OpenShift Container Platform

* Understanding persistent storage